name: Package and release

on:
  pull_request:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
    - name: Install Poetry
      env:
        POETRY_VERSION: 1.4.0
      run: |
        curl -sSL https://install.python-poetry.org | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        poetry self add "poetry-dynamic-versioning[plugin]"

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - uses: actions/checkout@v3
      with:
        # Necessary to get tags for correct versioning
        fetch-depth: 0

    - run: |
        mkdir -p dist
        cp -f NOTICE quri_parts/
        poetry build
        cd packages
        for pkg in *
        do
          cd $pkg
          cp -f NOTICE quri_parts/$pkg/
          poetry build
          mv dist/* ../../dist
          cd ..
        done

    - uses: actions/upload-artifact@v3
      with:
        name: QURI parts packages
        path: dist/*
        if-no-files-found: error

  release:
    needs: [package]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: QURI parts packages

    - name: Install Twine
      run: python -m pip install twine

    - name: Release to PyPI
      run: python -m twine upload *
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.TWINE_API_TOKEN }}
